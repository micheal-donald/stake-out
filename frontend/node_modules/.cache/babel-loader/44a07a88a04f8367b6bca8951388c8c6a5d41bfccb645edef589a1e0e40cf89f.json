{"ast":null,"code":"// utils/gameHelpers.js\nexport const generateCrashPoint = () => parseFloat(Math.max(1, 100 / (1 - 0.93 * Math.random()) / 100).toFixed(2));\nexport const generateLinePath = (points, maxTime, maxValue) => points.map((point, i) => {\n  const x = point.time / maxTime * 100;\n  const y = 100 - point.value / maxValue * 95;\n  return `${i === 0 ? 'M' : 'L'} ${x} ${y}`;\n}).join(' ');\nexport const generateAreaPath = (points, maxTime, maxValue) => {\n  let area = 'M 0 100';\n  points.forEach(point => {\n    const x = point.time / maxTime * 100;\n    const y = 100 - point.value / maxValue * 95;\n    area += ` L ${x} ${y}`;\n  });\n  if (points.length > 0) {\n    const lastX = points[points.length - 1].time / maxTime * 100;\n    area += ` L ${lastX} 100 Z`;\n  }\n  return area;\n};\nexport const generateGridLines = maxValue => Array.from({\n  length: 5\n}, (_, i) => i + 1).filter(val => val < maxValue).map(val => ({\n  y: 100 - val / maxValue * 95,\n  value: val\n}));\n\n// Constants\nexport const DANGER_COLORS = {\n  safe: '#60A5FA',\n  medium: '#FBBF24',\n  risky: '#F97316',\n  extreme: '#EF4444'\n};","map":{"version":3,"names":["generateCrashPoint","parseFloat","Math","max","random","toFixed","generateLinePath","points","maxTime","maxValue","map","point","i","x","time","y","value","join","generateAreaPath","area","forEach","length","lastX","generateGridLines","Array","from","_","filter","val","DANGER_COLORS","safe","medium","risky","extreme"],"sources":["/home/lekim/Projects/stake-out-bet/src/utils/gameHelpers.js"],"sourcesContent":["// utils/gameHelpers.js\nexport const generateCrashPoint = () => parseFloat(Math.max(1, (100 / (1 - 0.93 * Math.random())) / 100).toFixed(2));\n\nexport const generateLinePath = (points, maxTime, maxValue) =>\n  points\n    .map((point, i) => {\n      const x = (point.time / maxTime) * 100;\n      const y = 100 - (point.value / maxValue) * 95;\n      return `${i === 0 ? 'M' : 'L'} ${x} ${y}`;\n    })\n    .join(' ');\n\nexport const generateAreaPath = (points, maxTime, maxValue) => {\n  let area = 'M 0 100';\n  points.forEach((point) => {\n    const x = (point.time / maxTime) * 100;\n    const y = 100 - (point.value / maxValue) * 95;\n    area += ` L ${x} ${y}`;\n  });\n  if (points.length > 0) {\n    const lastX = (points[points.length - 1].time / maxTime) * 100;\n    area += ` L ${lastX} 100 Z`;\n  }\n  return area;\n};\n\nexport const generateGridLines = (maxValue) =>\n  Array.from({ length: 5 }, (_, i) => i + 1)\n    .filter((val) => val < maxValue)\n    .map((val) => ({\n      y: 100 - (val / maxValue) * 95,\n      value: val,\n    }));\n\n// Constants\nexport const DANGER_COLORS = {\n  safe: '#60A5FA',\n  medium: '#FBBF24', \n  risky: '#F97316', \n  extreme: '#EF4444'\n};"],"mappings":"AAAA;AACA,OAAO,MAAMA,kBAAkB,GAAGA,CAAA,KAAMC,UAAU,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAG,GAAG,IAAI,CAAC,GAAG,IAAI,GAAGD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAC,GAAI,GAAG,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;AAEpH,OAAO,MAAMC,gBAAgB,GAAGA,CAACC,MAAM,EAAEC,OAAO,EAAEC,QAAQ,KACxDF,MAAM,CACHG,GAAG,CAAC,CAACC,KAAK,EAAEC,CAAC,KAAK;EACjB,MAAMC,CAAC,GAAIF,KAAK,CAACG,IAAI,GAAGN,OAAO,GAAI,GAAG;EACtC,MAAMO,CAAC,GAAG,GAAG,GAAIJ,KAAK,CAACK,KAAK,GAAGP,QAAQ,GAAI,EAAE;EAC7C,OAAO,GAAGG,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG,IAAIC,CAAC,IAAIE,CAAC,EAAE;AAC3C,CAAC,CAAC,CACDE,IAAI,CAAC,GAAG,CAAC;AAEd,OAAO,MAAMC,gBAAgB,GAAGA,CAACX,MAAM,EAAEC,OAAO,EAAEC,QAAQ,KAAK;EAC7D,IAAIU,IAAI,GAAG,SAAS;EACpBZ,MAAM,CAACa,OAAO,CAAET,KAAK,IAAK;IACxB,MAAME,CAAC,GAAIF,KAAK,CAACG,IAAI,GAAGN,OAAO,GAAI,GAAG;IACtC,MAAMO,CAAC,GAAG,GAAG,GAAIJ,KAAK,CAACK,KAAK,GAAGP,QAAQ,GAAI,EAAE;IAC7CU,IAAI,IAAI,MAAMN,CAAC,IAAIE,CAAC,EAAE;EACxB,CAAC,CAAC;EACF,IAAIR,MAAM,CAACc,MAAM,GAAG,CAAC,EAAE;IACrB,MAAMC,KAAK,GAAIf,MAAM,CAACA,MAAM,CAACc,MAAM,GAAG,CAAC,CAAC,CAACP,IAAI,GAAGN,OAAO,GAAI,GAAG;IAC9DW,IAAI,IAAI,MAAMG,KAAK,QAAQ;EAC7B;EACA,OAAOH,IAAI;AACb,CAAC;AAED,OAAO,MAAMI,iBAAiB,GAAId,QAAQ,IACxCe,KAAK,CAACC,IAAI,CAAC;EAAEJ,MAAM,EAAE;AAAE,CAAC,EAAE,CAACK,CAAC,EAAEd,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC,CACvCe,MAAM,CAAEC,GAAG,IAAKA,GAAG,GAAGnB,QAAQ,CAAC,CAC/BC,GAAG,CAAEkB,GAAG,KAAM;EACbb,CAAC,EAAE,GAAG,GAAIa,GAAG,GAAGnB,QAAQ,GAAI,EAAE;EAC9BO,KAAK,EAAEY;AACT,CAAC,CAAC,CAAC;;AAEP;AACA,OAAO,MAAMC,aAAa,GAAG;EAC3BC,IAAI,EAAE,SAAS;EACfC,MAAM,EAAE,SAAS;EACjBC,KAAK,EAAE,SAAS;EAChBC,OAAO,EAAE;AACX,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}