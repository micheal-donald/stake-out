{"ast":null,"code":"var _jsxFileName = \"/home/lekim/Projects/stake-out-bet/src/StakeOutBet.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Clock, AlertTriangle } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StakeOutBet = () => {\n  _s();\n  // Game states\n  const [gameState, setGameState] = useState('waiting');\n  const [multiplier, setMultiplier] = useState(1.00);\n  const [bet, setBet] = useState(100);\n  const [countdown, setCountdown] = useState(5);\n  const [history, setHistory] = useState([{\n    id: 1,\n    crash: 2.18\n  }, {\n    id: 2,\n    crash: 1.49\n  }, {\n    id: 3,\n    crash: 3.77\n  }, {\n    id: 4,\n    crash: 1.22\n  }, {\n    id: 5,\n    crash: 7.42\n  }]);\n  const [autoCashout, setAutoCashout] = useState(0);\n  const [winnings, setWinnings] = useState(0);\n  const [crashPoint, setCrashPoint] = useState(0);\n  const [graphPoints, setGraphPoints] = useState([]);\n\n  // Refs\n  const requestRef = useRef();\n  const startTimeRef = useRef();\n  const svgRef = useRef(null);\n\n  // Generate a random crash point\n  const generateCrashPoint = () => parseFloat(Math.max(1, 100 / (1 - 0.93 * Math.random()) / 100).toFixed(2));\n\n  // Start the game\n  const startGame = () => {\n    const newCrashPoint = generateCrashPoint();\n    setCrashPoint(newCrashPoint);\n    setMultiplier(1);\n    setGameState('running');\n    setGraphPoints([{\n      time: 0,\n      value: 1\n    }]);\n    startTimeRef.current = Date.now();\n    console.log(`Game starting. Will crash at ${newCrashPoint}x`);\n  };\n\n  // Update game loop using requestAnimationFrame\n  const updateGameLoop = () => {\n    var _graphPoints$at;\n    const elapsed = (Date.now() - startTimeRef.current) / 1000;\n    const newMultiplier = parseFloat(Math.pow(1.0316, elapsed).toFixed(2));\n\n    // Check for termination conditions\n    if (newMultiplier >= crashPoint) return crash();\n    if (autoCashout > 0 && newMultiplier >= autoCashout) return cashOut();\n    setMultiplier(newMultiplier);\n\n    // Throttle graph updates to improve performance (update every ~100ms)\n    if (Math.floor(elapsed * 10) !== Math.floor((((_graphPoints$at = graphPoints.at(-1)) === null || _graphPoints$at === void 0 ? void 0 : _graphPoints$at.time) || 0) * 10)) {\n      setGraphPoints(prev => [...prev, {\n        time: elapsed,\n        value: newMultiplier\n      }]);\n    }\n    requestRef.current = requestAnimationFrame(updateGameLoop);\n  };\n\n  // Player cashes out\n  const cashOut = () => {\n    if (gameState !== 'running') return;\n    setWinnings(parseFloat((bet * multiplier).toFixed(2)));\n    setGameState('cashed');\n\n    // Cancel animation frame\n    cancelAnimationFrame(requestRef.current);\n  };\n\n  // Game crashes\n  const crash = () => {\n    setGameState('crashed');\n\n    // Cancel animation frame\n    cancelAnimationFrame(requestRef.current);\n\n    // Add to history\n    setHistory(prev => [{\n      id: prev.length + 1,\n      crash: crashPoint\n    }, ...prev.slice(0, 9)]);\n  };\n\n  // Handle between-game countdown\n  useEffect(() => {\n    if (gameState === 'waiting' && countdown > 0) {\n      const timer = setTimeout(() => setCountdown(prev => prev - 1), 1000);\n      return () => clearTimeout(timer);\n    }\n    if (gameState === 'waiting' && countdown === 0) startGame();\n  }, [gameState, countdown]);\n\n  // Start/stop animation loop based on game state\n  useEffect(() => {\n    if (gameState === 'running') {\n      requestRef.current = requestAnimationFrame(updateGameLoop);\n    }\n    return () => {\n      if (requestRef.current) {\n        cancelAnimationFrame(requestRef.current);\n      }\n    };\n  }, [gameState]);\n\n  // Reset countdown after game ends\n  useEffect(() => {\n    if (['crashed', 'cashed'].includes(gameState)) {\n      const timer = setTimeout(() => {\n        setGameState('waiting');\n        setCountdown(5);\n      }, 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [gameState]);\n\n  // Determine if the game is getting \"dangerous\" (for visual cues)\n  const dangerLevel = () => multiplier < 1.5 ? 'safe' : multiplier < 3 ? 'medium' : multiplier < 5 ? 'risky' : 'extreme';\n\n  // Get color based on danger level\n  const getDangerColor = () => ({\n    safe: '#60A5FA',\n    medium: '#FBBF24',\n    risky: '#F97316',\n    extreme: '#EF4444'\n  })[dangerLevel()];\n\n  // Create SVG path and area from graph points\n  const renderGraph = () => {\n    if (!graphPoints.length) return null;\n    const maxTime = Math.max(10, graphPoints[graphPoints.length - 1].time * 1.1);\n    const maxValue = Math.max(5, multiplier * 1.2);\n\n    // Create line path\n    let linePath = '';\n    // Create area path (line + bottom enclosure)\n    let areaPath = '';\n\n    // Start the area path at the origin (0,100) - bottom left corner\n    areaPath = 'M 0 100';\n    graphPoints.forEach((point, index) => {\n      // Scale to svg coordinates\n      const x = point.time / maxTime * 100;\n      const y = 100 - point.value / maxValue * 95; // Keep 5% margin at top\n\n      if (index === 0) {\n        linePath = `M ${x} ${y}`;\n        // First point in the area path (move from origin to first data point)\n        areaPath += ` L ${x} ${y}`;\n      } else {\n        linePath += ` L ${x} ${y}`;\n        areaPath += ` L ${x} ${y}`;\n      }\n\n      // If last point, close the area path\n      if (index === graphPoints.length - 1) {\n        areaPath += ` L ${x} 100 Z`; // Close back to bottom\n      }\n    });\n\n    // Generate horizontal grid lines\n    const gridLines = [];\n    for (let i = 1; i <= 5; i++) {\n      const value = i;\n      if (value < maxValue) {\n        const y = 100 - value / maxValue * 95;\n        gridLines.push({\n          y,\n          value\n        });\n      }\n    }\n    return /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: \"100%\",\n      height: \"100%\",\n      className: \"absolute inset-0\",\n      ref: svgRef,\n      children: [gridLines.map((line, i) => /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"0\",\n          y1: `${line.y}%`,\n          x2: \"100%\",\n          y2: `${line.y}%`,\n          stroke: \"#374151\",\n          strokeWidth: \"1\",\n          strokeDasharray: \"5,5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: \"5\",\n          y: `${line.y - 1}%`,\n          fill: \"#9CA3AF\",\n          fontSize: \"12\",\n          children: [line.value.toFixed(1), \"x\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this)), [25, 50, 75].map((percent, i) => /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: `${percent}%`,\n        y1: \"0\",\n        x2: `${percent}%`,\n        y2: \"100%\",\n        stroke: \"#374151\",\n        strokeWidth: \"1\",\n        strokeDasharray: \"5,5\"\n      }, `v${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"path\", {\n        d: areaPath,\n        fill: getDangerColor(),\n        fillOpacity: \"0.2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n        d: linePath,\n        fill: \"none\",\n        stroke: getDangerColor(),\n        strokeWidth: \"3\",\n        strokeLinecap: \"round\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), graphPoints.length > 0 && /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: `${graphPoints[graphPoints.length - 1].time / maxTime * 100}%`,\n        cy: `${100 - graphPoints[graphPoints.length - 1].value / maxValue * 95}%`,\n        r: \"6\",\n        fill: getDangerColor(),\n        className: dangerLevel() === 'extreme' ? 'animate-pulse' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render the multiplier with animation\n  const renderMultiplier = () => {\n    // Determine text size based on multiplier value\n    const baseSize = 36;\n    const growthFactor = Math.min(1.5, 1 + (multiplier - 1) * 0.1);\n    const fontSize = baseSize * growthFactor;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `absolute top-3 right-3 text-4xl font-bold transition-all duration-100\n                  ${dangerLevel() === 'safe' ? 'text-blue-400' : ''}\n                  ${dangerLevel() === 'medium' ? 'text-yellow-400' : ''}\n                  ${dangerLevel() === 'risky' ? 'text-orange-500' : ''}\n                  ${dangerLevel() === 'extreme' ? 'text-red-500 animate-pulse' : ''}`,\n      style: {\n        fontSize: `${fontSize}px`\n      },\n      children: [multiplier.toFixed(2), \"x\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center p-6 bg-gray-900 text-white rounded-lg shadow-lg w-full max-w-2xl\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-6\",\n      children: \"Stake Out Bet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative w-full h-64 bg-gray-800 rounded-lg mb-6 overflow-hidden\",\n      children: [gameState !== 'waiting' && renderGraph(), gameState === 'running' && renderMultiplier(), gameState === 'waiting' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0 flex items-center justify-center z-20\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(Clock, {\n            className: \"mx-auto mb-2\",\n            size: 48\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-4xl font-bold\",\n            children: [countdown, \"s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2\",\n            children: \"Next round starting soon...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this), gameState === 'crashed' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0 flex items-center justify-center z-20 bg-red-900 bg-opacity-75\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n            className: \"mx-auto mb-2\",\n            size: 48\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-5xl font-bold text-red-300\",\n            children: \"CRASH!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2\",\n            children: [\"Crashed at \", crashPoint.toFixed(2), \"x\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this), gameState === 'cashed' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0 flex items-center justify-center z-20 bg-green-900 bg-opacity-75\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-5xl font-bold text-green-300\",\n            children: \"CASHED OUT!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2\",\n            children: [\"You won \", winnings.toFixed(2), \"!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full grid grid-cols-2 gap-4 mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm mb-1\",\n          children: \"Your Bet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"10\",\n          max: \"1000\",\n          value: bet,\n          onChange: e => setBet(Number(e.target.value)),\n          disabled: gameState === 'running',\n          className: \"w-full px-3 py-2 bg-gray-700 rounded text-white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm mb-1\",\n          children: \"Auto Cashout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0\",\n          step: \"0.1\",\n          value: autoCashout,\n          onChange: e => setAutoCashout(Number(e.target.value)),\n          disabled: gameState === 'running',\n          placeholder: \"0 = disabled\",\n          className: \"w-full px-3 py-2 bg-gray-700 rounded text-white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: gameState === 'running' ? cashOut : null,\n      disabled: gameState !== 'running',\n      className: `w-full py-4 rounded-lg font-bold text-xl mb-6\n                  ${gameState === 'running' ? 'bg-green-600 hover:bg-green-700 active:bg-green-800' : 'bg-gray-700 cursor-not-allowed'}`,\n      children: gameState === 'running' ? 'STAKE OUT! (' + (bet * multiplier).toFixed(2) + ')' : 'Waiting for next round...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-2\",\n        children: \"Previous Crashes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-2\",\n        children: history.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `px-3 py-1 rounded\n                        ${item.crash < 2 ? 'bg-red-800' : ''}\n                        ${item.crash >= 2 && item.crash < 4 ? 'bg-yellow-800' : ''}\n                        ${item.crash >= 4 ? 'bg-green-800' : ''}`,\n          children: [item.crash.toFixed(2), \"x\"]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full mt-6 text-xs text-gray-400\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Game is for demonstration purposes only. No real money is involved.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Press STAKE OUT to cash out before the multiplier crashes!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 264,\n    columnNumber: 5\n  }, this);\n};\n_s(StakeOutBet, \"FOFZ8YDH2zE0dUXA05q7B4q5iuk=\");\n_c = StakeOutBet;\nexport default StakeOutBet;\nvar _c;\n$RefreshReg$(_c, \"StakeOutBet\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Clock","AlertTriangle","jsxDEV","_jsxDEV","StakeOutBet","_s","gameState","setGameState","multiplier","setMultiplier","bet","setBet","countdown","setCountdown","history","setHistory","id","crash","autoCashout","setAutoCashout","winnings","setWinnings","crashPoint","setCrashPoint","graphPoints","setGraphPoints","requestRef","startTimeRef","svgRef","generateCrashPoint","parseFloat","Math","max","random","toFixed","startGame","newCrashPoint","time","value","current","Date","now","console","log","updateGameLoop","_graphPoints$at","elapsed","newMultiplier","pow","cashOut","floor","at","prev","requestAnimationFrame","cancelAnimationFrame","length","slice","timer","setTimeout","clearTimeout","includes","dangerLevel","getDangerColor","safe","medium","risky","extreme","renderGraph","maxTime","maxValue","linePath","areaPath","forEach","point","index","x","y","gridLines","i","push","width","height","className","ref","children","map","line","x1","y1","x2","y2","stroke","strokeWidth","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","fill","fontSize","percent","d","fillOpacity","strokeLinecap","cx","cy","r","renderMultiplier","baseSize","growthFactor","min","style","size","type","onChange","e","Number","target","disabled","step","placeholder","onClick","item","_c","$RefreshReg$"],"sources":["/home/lekim/Projects/stake-out-bet/src/StakeOutBet.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Clock, AlertTriangle } from 'lucide-react';\n\nconst StakeOutBet = () => {\n  // Game states\n  const [gameState, setGameState] = useState('waiting');\n  const [multiplier, setMultiplier] = useState(1.00);\n  const [bet, setBet] = useState(100);\n  const [countdown, setCountdown] = useState(5);\n  const [history, setHistory] = useState([\n    { id: 1, crash: 2.18 },\n    { id: 2, crash: 1.49 },\n    { id: 3, crash: 3.77 },\n    { id: 4, crash: 1.22 },\n    { id: 5, crash: 7.42 },\n  ]);\n  const [autoCashout, setAutoCashout] = useState(0);\n  const [winnings, setWinnings] = useState(0);\n  const [crashPoint, setCrashPoint] = useState(0);\n  const [graphPoints, setGraphPoints] = useState([]);\n  \n  // Refs\n  const requestRef = useRef();\n  const startTimeRef = useRef();\n  const svgRef = useRef(null);\n  \n  // Generate a random crash point\n  const generateCrashPoint = () => parseFloat(Math.max(1, (100 / (1 - 0.93 * Math.random())) / 100).toFixed(2));\n  \n  // Start the game\n  const startGame = () => {\n    const newCrashPoint = generateCrashPoint();\n    setCrashPoint(newCrashPoint);\n    setMultiplier(1);\n    setGameState('running');\n    setGraphPoints([{ time: 0, value: 1 }]);\n    startTimeRef.current = Date.now();\n    console.log(`Game starting. Will crash at ${newCrashPoint}x`);\n  };\n  \n  // Update game loop using requestAnimationFrame\n  const updateGameLoop = () => {\n    const elapsed = (Date.now() - startTimeRef.current) / 1000;\n    const newMultiplier = parseFloat(Math.pow(1.0316, elapsed).toFixed(2));\n    \n    // Check for termination conditions\n    if (newMultiplier >= crashPoint) return crash();\n    if (autoCashout > 0 && newMultiplier >= autoCashout) return cashOut();\n    \n    setMultiplier(newMultiplier);\n    \n    // Throttle graph updates to improve performance (update every ~100ms)\n    if (Math.floor(elapsed * 10) !== Math.floor((graphPoints.at(-1)?.time || 0) * 10)) {\n      setGraphPoints(prev => [...prev, { time: elapsed, value: newMultiplier }]);\n    }\n    \n    requestRef.current = requestAnimationFrame(updateGameLoop);\n  };\n  \n  // Player cashes out\n  const cashOut = () => {\n    if (gameState !== 'running') return;\n    \n    setWinnings(parseFloat((bet * multiplier).toFixed(2)));\n    setGameState('cashed');\n    \n    // Cancel animation frame\n    cancelAnimationFrame(requestRef.current);\n  };\n  \n  // Game crashes\n  const crash = () => {\n    setGameState('crashed');\n    \n    // Cancel animation frame\n    cancelAnimationFrame(requestRef.current);\n    \n    // Add to history\n    setHistory(prev => [{ id: prev.length + 1, crash: crashPoint }, ...prev.slice(0, 9)]);\n  };\n  \n  // Handle between-game countdown\n  useEffect(() => {\n    if (gameState === 'waiting' && countdown > 0) {\n      const timer = setTimeout(() => setCountdown(prev => prev - 1), 1000);\n      return () => clearTimeout(timer);\n    }\n    if (gameState === 'waiting' && countdown === 0) startGame();\n  }, [gameState, countdown]);\n  \n  // Start/stop animation loop based on game state\n  useEffect(() => {\n    if (gameState === 'running') {\n      requestRef.current = requestAnimationFrame(updateGameLoop);\n    }\n    return () => {\n      if (requestRef.current) {\n        cancelAnimationFrame(requestRef.current);\n      }\n    };\n  }, [gameState]);\n  \n  // Reset countdown after game ends\n  useEffect(() => {\n    if (['crashed', 'cashed'].includes(gameState)) {\n      const timer = setTimeout(() => {\n        setGameState('waiting');\n        setCountdown(5);\n      }, 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [gameState]);\n  \n  // Determine if the game is getting \"dangerous\" (for visual cues)\n  const dangerLevel = () => (multiplier < 1.5 ? 'safe' : multiplier < 3 ? 'medium' : multiplier < 5 ? 'risky' : 'extreme');\n  \n  // Get color based on danger level\n  const getDangerColor = () => ({ \n    safe: '#60A5FA', \n    medium: '#FBBF24', \n    risky: '#F97316', \n    extreme: '#EF4444' \n  }[dangerLevel()]);\n  \n  // Create SVG path and area from graph points\n  const renderGraph = () => {\n    if (!graphPoints.length) return null;\n    \n    const maxTime = Math.max(10, graphPoints[graphPoints.length - 1].time * 1.1);\n    const maxValue = Math.max(5, multiplier * 1.2);\n    \n    // Create line path\n    let linePath = '';\n    // Create area path (line + bottom enclosure)\n    let areaPath = '';\n    \n    // Start the area path at the origin (0,100) - bottom left corner\n    areaPath = 'M 0 100';\n    \n    graphPoints.forEach((point, index) => {\n      // Scale to svg coordinates\n      const x = (point.time / maxTime) * 100;\n      const y = 100 - (point.value / maxValue) * 95; // Keep 5% margin at top\n      \n      if (index === 0) {\n        linePath = `M ${x} ${y}`;\n        // First point in the area path (move from origin to first data point)\n        areaPath += ` L ${x} ${y}`;\n      } else {\n        linePath += ` L ${x} ${y}`;\n        areaPath += ` L ${x} ${y}`;\n      }\n      \n      // If last point, close the area path\n      if (index === graphPoints.length - 1) {\n        areaPath += ` L ${x} 100 Z`; // Close back to bottom\n      }\n    });\n    \n    // Generate horizontal grid lines\n    const gridLines = [];\n    for (let i = 1; i <= 5; i++) {\n      const value = i;\n      if (value < maxValue) {\n        const y = 100 - (value / maxValue) * 95;\n        gridLines.push({\n          y,\n          value\n        });\n      }\n    }\n    \n    return (\n      <svg width=\"100%\" height=\"100%\" className=\"absolute inset-0\" ref={svgRef}>\n        {/* Grid lines */}\n        {gridLines.map((line, i) => (\n          <g key={i}>\n            <line\n              x1=\"0\"\n              y1={`${line.y}%`}\n              x2=\"100%\"\n              y2={`${line.y}%`}\n              stroke=\"#374151\"\n              strokeWidth=\"1\"\n              strokeDasharray=\"5,5\"\n            />\n            <text\n              x=\"5\"\n              y={`${line.y - 1}%`}\n              fill=\"#9CA3AF\"\n              fontSize=\"12\"\n            >\n              {line.value.toFixed(1)}x\n            </text>\n          </g>\n        ))}\n        \n        {/* Vertical time markers */}\n        {[25, 50, 75].map((percent, i) => (\n          <line\n            key={`v${i}`}\n            x1={`${percent}%`}\n            y1=\"0\"\n            x2={`${percent}%`}\n            y2=\"100%\"\n            stroke=\"#374151\"\n            strokeWidth=\"1\"\n            strokeDasharray=\"5,5\"\n          />\n        ))}\n        \n        {/* Fill area under curve */}\n        <path\n          d={areaPath}\n          fill={getDangerColor()}\n          fillOpacity=\"0.2\"\n        />\n        \n        {/* Line */}\n        <path\n          d={linePath}\n          fill=\"none\"\n          stroke={getDangerColor()}\n          strokeWidth=\"3\"\n          strokeLinecap=\"round\"\n        />\n        \n        {/* Current point indicator */}\n        {graphPoints.length > 0 && (\n          <circle\n            cx={`${(graphPoints[graphPoints.length - 1].time / maxTime) * 100}%`}\n            cy={`${100 - (graphPoints[graphPoints.length - 1].value / maxValue) * 95}%`}\n            r=\"6\"\n            fill={getDangerColor()}\n            className={dangerLevel() === 'extreme' ? 'animate-pulse' : ''}\n          />\n        )}\n      </svg>\n    );\n  };\n  \n  // Render the multiplier with animation\n  const renderMultiplier = () => {\n    // Determine text size based on multiplier value\n    const baseSize = 36;\n    const growthFactor = Math.min(1.5, 1 + (multiplier - 1) * 0.1);\n    const fontSize = baseSize * growthFactor;\n    \n    return (\n      <div \n        className={`absolute top-3 right-3 text-4xl font-bold transition-all duration-100\n                  ${dangerLevel() === 'safe' ? 'text-blue-400' : ''}\n                  ${dangerLevel() === 'medium' ? 'text-yellow-400' : ''}\n                  ${dangerLevel() === 'risky' ? 'text-orange-500' : ''}\n                  ${dangerLevel() === 'extreme' ? 'text-red-500 animate-pulse' : ''}`}\n        style={{ fontSize: `${fontSize}px` }}\n      >\n        {multiplier.toFixed(2)}x\n      </div>\n    );\n  };\n  \n  return (\n    <div className=\"flex flex-col items-center p-6 bg-gray-900 text-white rounded-lg shadow-lg w-full max-w-2xl\">\n      <h1 className=\"text-3xl font-bold mb-6\">Stake Out Bet</h1>\n      \n      {/* Main Game Display */}\n      <div className=\"relative w-full h-64 bg-gray-800 rounded-lg mb-6 overflow-hidden\">\n        {/* Game graph */}\n        {gameState !== 'waiting' && renderGraph()}\n        \n        {/* Multiplier Display */}\n        {gameState === 'running' && renderMultiplier()}\n        \n        {/* Game States */}\n        {gameState === 'waiting' && (\n          <div className=\"absolute inset-0 flex items-center justify-center z-20\">\n            <div className=\"text-center\">\n              <Clock className=\"mx-auto mb-2\" size={48} />\n              <div className=\"text-4xl font-bold\">{countdown}s</div>\n              <div className=\"mt-2\">Next round starting soon...</div>\n            </div>\n          </div>\n        )}\n        \n        {gameState === 'crashed' && (\n          <div className=\"absolute inset-0 flex items-center justify-center z-20 bg-red-900 bg-opacity-75\">\n            <div className=\"text-center\">\n              <AlertTriangle className=\"mx-auto mb-2\" size={48} />\n              <div className=\"text-5xl font-bold text-red-300\">CRASH!</div>\n              <div className=\"mt-2\">Crashed at {crashPoint.toFixed(2)}x</div>\n            </div>\n          </div>\n        )}\n        \n        {gameState === 'cashed' && (\n          <div className=\"absolute inset-0 flex items-center justify-center z-20 bg-green-900 bg-opacity-75\">\n            <div className=\"text-center\">\n              <div className=\"text-5xl font-bold text-green-300\">CASHED OUT!</div>\n              <div className=\"mt-2\">You won {winnings.toFixed(2)}!</div>\n            </div>\n          </div>\n        )}\n      </div>\n      \n      {/* Controls */}\n      <div className=\"w-full grid grid-cols-2 gap-4 mb-6\">\n        <div>\n          <label className=\"block text-sm mb-1\">Your Bet</label>\n          <input \n            type=\"number\" \n            min=\"10\"\n            max=\"1000\"\n            value={bet}\n            onChange={(e) => setBet(Number(e.target.value))}\n            disabled={gameState === 'running'}\n            className=\"w-full px-3 py-2 bg-gray-700 rounded text-white\"\n          />\n        </div>\n        \n        <div>\n          <label className=\"block text-sm mb-1\">Auto Cashout</label>\n          <input \n            type=\"number\" \n            min=\"0\"\n            step=\"0.1\"\n            value={autoCashout}\n            onChange={(e) => setAutoCashout(Number(e.target.value))}\n            disabled={gameState === 'running'}\n            placeholder=\"0 = disabled\"\n            className=\"w-full px-3 py-2 bg-gray-700 rounded text-white\"\n          />\n        </div>\n      </div>\n      \n      {/* Action Button */}\n      <button \n        onClick={gameState === 'running' ? cashOut : null}\n        disabled={gameState !== 'running'}\n        className={`w-full py-4 rounded-lg font-bold text-xl mb-6\n                  ${gameState === 'running' \n                    ? 'bg-green-600 hover:bg-green-700 active:bg-green-800' \n                    : 'bg-gray-700 cursor-not-allowed'}`}\n      >\n        {gameState === 'running' ? 'STAKE OUT! (' + (bet * multiplier).toFixed(2) + ')' : 'Waiting for next round...'}\n      </button>\n      \n      {/* History */}\n      <div className=\"w-full\">\n        <h2 className=\"text-xl font-bold mb-2\">Previous Crashes</h2>\n        <div className=\"flex flex-wrap gap-2\">\n          {history.map(item => (\n            <div \n              key={item.id} \n              className={`px-3 py-1 rounded\n                        ${item.crash < 2 ? 'bg-red-800' : ''}\n                        ${item.crash >= 2 && item.crash < 4 ? 'bg-yellow-800' : ''}\n                        ${item.crash >= 4 ? 'bg-green-800' : ''}`}\n            >\n              {item.crash.toFixed(2)}x\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Stats and Help */}\n      <div className=\"w-full mt-6 text-xs text-gray-400\">\n        <p>Game is for demonstration purposes only. No real money is involved.</p>\n        <p>Press STAKE OUT to cash out before the multiplier crashes!</p>\n      </div>\n    </div>\n  );\n};\n\nexport default StakeOutBet;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}