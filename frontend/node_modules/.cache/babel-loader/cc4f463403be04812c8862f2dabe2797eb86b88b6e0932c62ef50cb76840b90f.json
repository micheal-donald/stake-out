{"ast":null,"code":"var _jsxFileName = \"/home/lekim/Projects/stake-out-bet/src/StakeOutBet.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Clock, AlertTriangle } from 'lucide-react';\nimport './StakeOutBet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StakeOutBet = () => {\n  _s();\n  // Game states\n  const [gameState, setGameState] = useState('running'); // waiting, running, crashed, cashed\n  const [multiplier, setMultiplier] = useState(1.10);\n  const [bet, setBet] = useState(100);\n  const [countdown, setCountdown] = useState(5);\n  const [history, setHistory] = useState([{\n    id: 1,\n    crash: 2.18\n  }, {\n    id: 2,\n    crash: 1.49\n  }, {\n    id: 3,\n    crash: 3.77\n  }, {\n    id: 4,\n    crash: 1.22\n  }, {\n    id: 5,\n    crash: 7.42\n  }]);\n  const [autoCashout, setAutoCashout] = useState(0);\n  const [winnings, setWinnings] = useState(0);\n  const [crashPoint, setCrashPoint] = useState(0);\n  const [graphPoints, setGraphPoints] = useState([{\n    time: 0,\n    value: 1\n  }, {\n    time: 1,\n    value: 1.10\n  }]);\n\n  // Refs\n  const requestRef = useRef();\n  const startTimeRef = useRef();\n  const svgRef = useRef(null);\n\n  // Generate a random crash point\n  const generateCrashPoint = () => parseFloat(Math.max(1, 100 / (1 - 0.93 * Math.random()) / 100).toFixed(2));\n\n  // Start the game\n  const startGame = () => {\n    const newCrashPoint = generateCrashPoint();\n    setCrashPoint(newCrashPoint);\n    setMultiplier(1);\n    setGameState('running');\n    setGraphPoints([{\n      time: 0,\n      value: 1\n    }]);\n    startTimeRef.current = Date.now();\n    console.log(`Game starting. Will crash at ${newCrashPoint}x`);\n  };\n\n  // Update game loop using requestAnimationFrame\n  const updateGameLoop = () => {\n    var _graphPoints$at;\n    const elapsed = (Date.now() - startTimeRef.current) / 1000;\n    const newMultiplier = parseFloat(Math.pow(1.0316, elapsed).toFixed(2));\n\n    // Check for termination conditions\n    if (newMultiplier >= crashPoint) return crash();\n    if (autoCashout > 0 && newMultiplier >= autoCashout) return cashOut();\n    setMultiplier(newMultiplier);\n\n    // Throttle graph updates to improve performance (update every ~100ms)\n    if (Math.floor(elapsed * 10) !== Math.floor((((_graphPoints$at = graphPoints.at(-1)) === null || _graphPoints$at === void 0 ? void 0 : _graphPoints$at.time) || 0) * 10)) {\n      setGraphPoints(prev => [...prev, {\n        time: elapsed,\n        value: newMultiplier\n      }]);\n    }\n    requestRef.current = requestAnimationFrame(updateGameLoop);\n  };\n\n  // Player cashes out\n  const cashOut = () => {\n    if (gameState !== 'running') return;\n    setWinnings(parseFloat((bet * multiplier).toFixed(2)));\n    setGameState('cashed');\n\n    // Cancel animation frame\n    cancelAnimationFrame(requestRef.current);\n  };\n\n  // Game crashes\n  const crash = () => {\n    setGameState('crashed');\n\n    // Cancel animation frame\n    cancelAnimationFrame(requestRef.current);\n\n    // Add to history\n    setHistory(prev => [{\n      id: prev.length + 1,\n      crash: crashPoint\n    }, ...prev.slice(0, 9)]);\n  };\n\n  // Handle between-game countdown\n  useEffect(() => {\n    if (gameState === 'waiting' && countdown > 0) {\n      const timer = setTimeout(() => setCountdown(prev => prev - 1), 1000);\n      return () => clearTimeout(timer);\n    }\n    if (gameState === 'waiting' && countdown === 0) startGame();\n  }, [gameState, countdown]);\n\n  // Start/stop animation loop based on game state\n  useEffect(() => {\n    if (gameState === 'running') {\n      requestRef.current = requestAnimationFrame(updateGameLoop);\n    }\n    return () => {\n      if (requestRef.current) {\n        cancelAnimationFrame(requestRef.current);\n      }\n    };\n  }, [gameState]);\n\n  // Reset countdown after game ends\n  useEffect(() => {\n    if (['crashed', 'cashed'].includes(gameState)) {\n      const timer = setTimeout(() => {\n        setGameState('waiting');\n        setCountdown(5);\n      }, 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [gameState]);\n\n  // Determine if the game is getting \"dangerous\" (for visual cues)\n  const dangerLevel = () => multiplier < 1.5 ? 'safe' : multiplier < 3 ? 'medium' : multiplier < 5 ? 'risky' : 'extreme';\n\n  // Get color based on danger level\n  const getDangerColor = () => ({\n    safe: '#60A5FA',\n    medium: '#FBBF24',\n    risky: '#F97316',\n    extreme: '#EF4444'\n  })[dangerLevel()];\n\n  // Create SVG path and area from graph points\n  const renderGraph = () => {\n    if (!graphPoints.length) return null;\n    const maxTime = Math.max(10, graphPoints[graphPoints.length - 1].time * 1.1);\n    const maxValue = 5; // Fixed scale to match screenshot\n\n    // Create line path\n    let linePath = '';\n    // Create area path (line + bottom enclosure)\n    let areaPath = '';\n    graphPoints.forEach((point, index) => {\n      // Scale to svg coordinates\n      const x = point.time / maxTime * 100;\n      const y = 100 - point.value / maxValue * 95; // Keep 5% margin at top\n\n      if (index === 0) {\n        linePath = `M ${x} ${y}`;\n        areaPath = `M ${x} ${y}`;\n      } else {\n        linePath += ` L ${x} ${y}`;\n        areaPath += ` L ${x} ${y}`;\n      }\n\n      // If last point, close the area path\n      if (index === graphPoints.length - 1) {\n        areaPath += ` L ${x} 100 L 0 100 Z`;\n      }\n    });\n\n    // Generate horizontal grid lines for fixed values: 1.0x, 2.0x, 3.0x, 4.0x\n    const gridValues = [1.0, 2.0, 3.0, 4.0];\n    const gridLines = gridValues.map(value => ({\n      y: 100 - value / maxValue * 95,\n      value\n    }));\n    return /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: \"100%\",\n      height: \"100%\",\n      className: \"game-graph\",\n      children: [gridLines.map((line, i) => /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"0\",\n          y1: `${line.y}%`,\n          x2: \"100%\",\n          y2: `${line.y}%`,\n          className: \"grid-line\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: \"5\",\n          y: `${line.y - 1}%`,\n          className: \"grid-text\",\n          children: [line.value.toFixed(1), \"x\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this)), [25, 50, 75].map((percent, i) => /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: `${percent}%`,\n        y1: \"0\",\n        x2: `${percent}%`,\n        y2: \"100%\",\n        className: \"grid-line\"\n      }, `v${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"path\", {\n        d: areaPath,\n        fill: getDangerColor(),\n        className: \"graph-area\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n        d: linePath,\n        stroke: getDangerColor(),\n        className: \"graph-line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), graphPoints.length > 0 && /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: `${graphPoints[graphPoints.length - 1].time / maxTime * 100}%`,\n        cy: `${100 - graphPoints[graphPoints.length - 1].value / maxValue * 95}%`,\n        fill: getDangerColor(),\n        className: `point-indicator ${dangerLevel() === 'extreme' ? 'animate-pulse' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"game-title\",\n      children: \"Stake Out Bet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-display\",\n      children: [gameState !== 'waiting' && renderGraph(), gameState === 'running' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"multiplier-display\",\n        style: {\n          color: getDangerColor()\n        },\n        children: [multiplier.toFixed(2), \"x\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this), gameState === 'waiting' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-state\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-state-content\",\n          children: [/*#__PURE__*/_jsxDEV(Clock, {\n            className: \"mx-auto mb-2\",\n            size: 48\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-4xl font-bold\",\n            children: [countdown, \"s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2\",\n            children: \"Next round starting soon...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this), gameState === 'crashed' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-state crashed\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-state-content\",\n          children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n            size: 48\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-state-title text-red\",\n            children: \"CRASH!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-state-subtitle\",\n            children: [\"Crashed at \", crashPoint.toFixed(2), \"x\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this), gameState === 'cashed' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-state cashed\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-state-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-state-title text-green\",\n            children: \"CASHED OUT!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-state-subtitle\",\n            children: [\"You won \", winnings.toFixed(2), \"!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"control-label\",\n          children: \"Your Bet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"10\",\n          max: \"1000\",\n          value: bet,\n          onChange: e => setBet(Number(e.target.value)),\n          disabled: gameState === 'running',\n          className: \"control-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"control-label\",\n          children: \"Auto Cashout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0\",\n          step: \"0.1\",\n          value: autoCashout,\n          onChange: e => setAutoCashout(Number(e.target.value)),\n          disabled: gameState === 'running',\n          placeholder: \"0 = disabled\",\n          className: \"control-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: gameState === 'running' ? cashOut : null,\n      disabled: gameState !== 'running',\n      className: `action-button ${gameState === 'running' ? 'active' : 'inactive'}`,\n      children: gameState === 'running' ? `STAKE OUT! (${(bet * multiplier).toFixed(2)})` : 'Waiting for next round...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"history-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"history-title\",\n        children: \"Previous Crashes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"history-items\",\n        children: history.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `history-item ${item.crash < 2 ? 'low' : item.crash < 4 ? 'medium' : 'high'}`,\n          children: [item.crash.toFixed(2), \"x\"]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer-text\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Game is for demonstration purposes only. No real money is involved.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Press STAKE OUT to cash out before the multiplier crashes!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 5\n  }, this);\n};\n_s(StakeOutBet, \"4dStW+jUGrSd46FFdlrEpe3wcSY=\");\n_c = StakeOutBet;\nexport default StakeOutBet;\nvar _c;\n$RefreshReg$(_c, \"StakeOutBet\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Clock","AlertTriangle","jsxDEV","_jsxDEV","StakeOutBet","_s","gameState","setGameState","multiplier","setMultiplier","bet","setBet","countdown","setCountdown","history","setHistory","id","crash","autoCashout","setAutoCashout","winnings","setWinnings","crashPoint","setCrashPoint","graphPoints","setGraphPoints","time","value","requestRef","startTimeRef","svgRef","generateCrashPoint","parseFloat","Math","max","random","toFixed","startGame","newCrashPoint","current","Date","now","console","log","updateGameLoop","_graphPoints$at","elapsed","newMultiplier","pow","cashOut","floor","at","prev","requestAnimationFrame","cancelAnimationFrame","length","slice","timer","setTimeout","clearTimeout","includes","dangerLevel","getDangerColor","safe","medium","risky","extreme","renderGraph","maxTime","maxValue","linePath","areaPath","forEach","point","index","x","y","gridValues","gridLines","map","width","height","className","children","line","i","x1","y1","x2","y2","fileName","_jsxFileName","lineNumber","columnNumber","percent","d","fill","stroke","cx","cy","style","color","size","type","min","onChange","e","Number","target","disabled","step","placeholder","onClick","item","_c","$RefreshReg$"],"sources":["/home/lekim/Projects/stake-out-bet/src/StakeOutBet.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Clock, AlertTriangle } from 'lucide-react';\nimport './StakeOutBet.css';\n\nconst StakeOutBet = () => {\n  // Game states\n  const [gameState, setGameState] = useState('running'); // waiting, running, crashed, cashed\n  const [multiplier, setMultiplier] = useState(1.10);\n  const [bet, setBet] = useState(100);\n  const [countdown, setCountdown] = useState(5);\n  const [history, setHistory] = useState([\n    { id: 1, crash: 2.18 },\n    { id: 2, crash: 1.49 },\n    { id: 3, crash: 3.77 },\n    { id: 4, crash: 1.22 },\n    { id: 5, crash: 7.42 },\n  ]);\n  const [autoCashout, setAutoCashout] = useState(0);\n  const [winnings, setWinnings] = useState(0);\n  const [crashPoint, setCrashPoint] = useState(0);\n  const [graphPoints, setGraphPoints] = useState([\n    { time: 0, value: 1 },\n    { time: 1, value: 1.10 }\n  ]);\n  \n  // Refs\n  const requestRef = useRef();\n  const startTimeRef = useRef();\n  const svgRef = useRef(null);\n  \n  // Generate a random crash point\n  const generateCrashPoint = () => parseFloat(Math.max(1, (100 / (1 - 0.93 * Math.random())) / 100).toFixed(2));\n  \n  // Start the game\n  const startGame = () => {\n    const newCrashPoint = generateCrashPoint();\n    setCrashPoint(newCrashPoint);\n    setMultiplier(1);\n    setGameState('running');\n    setGraphPoints([{ time: 0, value: 1 }]);\n    startTimeRef.current = Date.now();\n    console.log(`Game starting. Will crash at ${newCrashPoint}x`);\n  };\n  \n  // Update game loop using requestAnimationFrame\n  const updateGameLoop = () => {\n    const elapsed = (Date.now() - startTimeRef.current) / 1000;\n    const newMultiplier = parseFloat(Math.pow(1.0316, elapsed).toFixed(2));\n    \n    // Check for termination conditions\n    if (newMultiplier >= crashPoint) return crash();\n    if (autoCashout > 0 && newMultiplier >= autoCashout) return cashOut();\n    \n    setMultiplier(newMultiplier);\n    \n    // Throttle graph updates to improve performance (update every ~100ms)\n    if (Math.floor(elapsed * 10) !== Math.floor((graphPoints.at(-1)?.time || 0) * 10)) {\n      setGraphPoints(prev => [...prev, { time: elapsed, value: newMultiplier }]);\n    }\n    \n    requestRef.current = requestAnimationFrame(updateGameLoop);\n  };\n  \n  // Player cashes out\n  const cashOut = () => {\n    if (gameState !== 'running') return;\n    \n    setWinnings(parseFloat((bet * multiplier).toFixed(2)));\n    setGameState('cashed');\n    \n    // Cancel animation frame\n    cancelAnimationFrame(requestRef.current);\n  };\n  \n  // Game crashes\n  const crash = () => {\n    setGameState('crashed');\n    \n    // Cancel animation frame\n    cancelAnimationFrame(requestRef.current);\n    \n    // Add to history\n    setHistory(prev => [{ id: prev.length + 1, crash: crashPoint }, ...prev.slice(0, 9)]);\n  };\n  \n  // Handle between-game countdown\n  useEffect(() => {\n    if (gameState === 'waiting' && countdown > 0) {\n      const timer = setTimeout(() => setCountdown(prev => prev - 1), 1000);\n      return () => clearTimeout(timer);\n    }\n    if (gameState === 'waiting' && countdown === 0) startGame();\n  }, [gameState, countdown]);\n  \n  // Start/stop animation loop based on game state\n  useEffect(() => {\n    if (gameState === 'running') {\n      requestRef.current = requestAnimationFrame(updateGameLoop);\n    }\n    return () => {\n      if (requestRef.current) {\n        cancelAnimationFrame(requestRef.current);\n      }\n    };\n  }, [gameState]);\n  \n  // Reset countdown after game ends\n  useEffect(() => {\n    if (['crashed', 'cashed'].includes(gameState)) {\n      const timer = setTimeout(() => {\n        setGameState('waiting');\n        setCountdown(5);\n      }, 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [gameState]);\n  \n  // Determine if the game is getting \"dangerous\" (for visual cues)\n  const dangerLevel = () => (multiplier < 1.5 ? 'safe' : multiplier < 3 ? 'medium' : multiplier < 5 ? 'risky' : 'extreme');\n  \n  // Get color based on danger level\n  const getDangerColor = () => ({ \n    safe: '#60A5FA', \n    medium: '#FBBF24', \n    risky: '#F97316', \n    extreme: '#EF4444' \n  }[dangerLevel()]);\n  \n  // Create SVG path and area from graph points\n  const renderGraph = () => {\n    if (!graphPoints.length) return null;\n    \n    const maxTime = Math.max(10, graphPoints[graphPoints.length - 1].time * 1.1);\n    const maxValue = 5; // Fixed scale to match screenshot\n    \n    // Create line path\n    let linePath = '';\n    // Create area path (line + bottom enclosure)\n    let areaPath = '';\n    \n    graphPoints.forEach((point, index) => {\n      // Scale to svg coordinates\n      const x = (point.time / maxTime) * 100;\n      const y = 100 - (point.value / maxValue) * 95; // Keep 5% margin at top\n      \n      if (index === 0) {\n        linePath = `M ${x} ${y}`;\n        areaPath = `M ${x} ${y}`;\n      } else {\n        linePath += ` L ${x} ${y}`;\n        areaPath += ` L ${x} ${y}`;\n      }\n      \n      // If last point, close the area path\n      if (index === graphPoints.length - 1) {\n        areaPath += ` L ${x} 100 L 0 100 Z`;\n      }\n    });\n    \n    // Generate horizontal grid lines for fixed values: 1.0x, 2.0x, 3.0x, 4.0x\n    const gridValues = [1.0, 2.0, 3.0, 4.0];\n    const gridLines = gridValues.map(value => ({\n      y: 100 - (value / maxValue) * 95,\n      value\n    }));\n    \n    return (\n      <svg width=\"100%\" height=\"100%\" className=\"game-graph\">\n        {/* Grid lines */}\n        {gridLines.map((line, i) => (\n          <g key={i}>\n            <line\n              x1=\"0\"\n              y1={`${line.y}%`}\n              x2=\"100%\"\n              y2={`${line.y}%`}\n              className=\"grid-line\"\n            />\n            <text\n              x=\"5\"\n              y={`${line.y - 1}%`}\n              className=\"grid-text\"\n            >\n              {line.value.toFixed(1)}x\n            </text>\n          </g>\n        ))}\n        \n        {/* Vertical grid lines - 3 equal divisions */}\n        {[25, 50, 75].map((percent, i) => (\n          <line\n            key={`v${i}`}\n            x1={`${percent}%`}\n            y1=\"0\"\n            x2={`${percent}%`}\n            y2=\"100%\"\n            className=\"grid-line\"\n          />\n        ))}\n        \n        {/* Fill area under curve */}\n        <path\n          d={areaPath}\n          fill={getDangerColor()}\n          className=\"graph-area\"\n        />\n        \n        {/* Line */}\n        <path\n          d={linePath}\n          stroke={getDangerColor()}\n          className=\"graph-line\"\n        />\n        \n        {/* Current point indicator */}\n        {graphPoints.length > 0 && (\n          <circle\n            cx={`${(graphPoints[graphPoints.length - 1].time / maxTime) * 100}%`}\n            cy={`${100 - (graphPoints[graphPoints.length - 1].value / maxValue) * 95}%`}\n            fill={getDangerColor()}\n            className={`point-indicator ${dangerLevel() === 'extreme' ? 'animate-pulse' : ''}`}\n          />\n        )}\n      </svg>\n    );\n  };\n  \n  return (\n    <div className=\"game-container\">\n      <h1 className=\"game-title\">Stake Out Bet</h1>\n      \n      {/* Main Game Display */}\n      <div className=\"game-display\">\n        {/* Game graph */}\n        {gameState !== 'waiting' && renderGraph()}\n        \n        {/* Multiplier Display */}\n        {gameState === 'running' && (\n          <div className=\"multiplier-display\" style={{ color: getDangerColor() }}>\n            {multiplier.toFixed(2)}x\n          </div>\n        )}\n        \n        {/* Game States */}\n        {gameState === 'waiting' && (\n          <div className=\"game-state\">\n            <div className=\"game-state-content\">\n              <Clock className=\"mx-auto mb-2\" size={48} />\n              <div className=\"text-4xl font-bold\">{countdown}s</div>\n              <div className=\"mt-2\">Next round starting soon...</div>\n            </div>\n          </div>\n        )}\n        \n        {gameState === 'crashed' && (\n          <div className=\"game-state crashed\">\n            <div className=\"game-state-content\">\n              <AlertTriangle size={48} />\n              <div className=\"game-state-title text-red\">CRASH!</div>\n              <div className=\"game-state-subtitle\">Crashed at {crashPoint.toFixed(2)}x</div>\n            </div>\n          </div>\n        )}\n        \n        {gameState === 'cashed' && (\n          <div className=\"game-state cashed\">\n            <div className=\"game-state-content\">\n              <div className=\"game-state-title text-green\">CASHED OUT!</div>\n              <div className=\"game-state-subtitle\">You won {winnings.toFixed(2)}!</div>\n            </div>\n          </div>\n        )}\n      </div>\n      \n      {/* Controls */}\n      <div className=\"controls\">\n        <div className=\"control-group\">\n          <label className=\"control-label\">Your Bet</label>\n          <input \n            type=\"number\" \n            min=\"10\"\n            max=\"1000\"\n            value={bet}\n            onChange={(e) => setBet(Number(e.target.value))}\n            disabled={gameState === 'running'}\n            className=\"control-input\"\n          />\n        </div>\n        \n        <div className=\"control-group\">\n          <label className=\"control-label\">Auto Cashout</label>\n          <input \n            type=\"number\" \n            min=\"0\"\n            step=\"0.1\"\n            value={autoCashout}\n            onChange={(e) => setAutoCashout(Number(e.target.value))}\n            disabled={gameState === 'running'}\n            placeholder=\"0 = disabled\"\n            className=\"control-input\"\n          />\n        </div>\n      </div>\n      \n      {/* Action Button */}\n      <button \n        onClick={gameState === 'running' ? cashOut : null}\n        disabled={gameState !== 'running'}\n        className={`action-button ${gameState === 'running' ? 'active' : 'inactive'}`}\n      >\n        {gameState === 'running' ? `STAKE OUT! (${(bet * multiplier).toFixed(2)})` : 'Waiting for next round...'}\n      </button>\n      \n      {/* History */}\n      <div className=\"history-container\">\n        <h2 className=\"history-title\">Previous Crashes</h2>\n        <div className=\"history-items\">\n          {history.map(item => (\n            <div \n              key={item.id} \n              className={`history-item ${item.crash < 2 ? 'low' : item.crash < 4 ? 'medium' : 'high'}`}\n            >\n              {item.crash.toFixed(2)}x\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Stats and Help */}\n      <div className=\"footer-text\">\n        <p>Game is for demonstration purposes only. No real money is involved.</p>\n        <p>Press STAKE OUT to cash out before the multiplier crashes!</p>\n      </div>\n    </div>\n  );\n};\n\nexport default StakeOutBet;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}