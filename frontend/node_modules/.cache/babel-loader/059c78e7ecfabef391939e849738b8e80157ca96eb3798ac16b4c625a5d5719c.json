{"ast":null,"code":"var _jsxFileName = \"/home/lekim/Projects/stake-out-bet/src/StakeOutBet.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Clock, AlertTriangle } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StakeOutBet = () => {\n  _s();\n  // Game states\n  const [gameState, setGameState] = useState('waiting'); // waiting, running, crashed, cashed\n  const [multiplier, setMultiplier] = useState(1.00);\n  const [bet, setBet] = useState(100);\n  const [countdown, setCountdown] = useState(5);\n  const [history, setHistory] = useState([{\n    id: 1,\n    crash: 2.18\n  }, {\n    id: 2,\n    crash: 1.49\n  }, {\n    id: 3,\n    crash: 3.77\n  }, {\n    id: 4,\n    crash: 1.22\n  }, {\n    id: 5,\n    crash: 7.42\n  }]);\n  const [autoCashout, setAutoCashout] = useState(0);\n  const [winnings, setWinnings] = useState(0);\n  const [crashPoint, setCrashPoint] = useState(0);\n  const [startTime, setStartTime] = useState(null);\n  const [graphPoints, setGraphPoints] = useState([]);\n\n  // Refs\n  const timerRef = useRef();\n  const svgRef = useRef(null);\n\n  // Generate a random crash point\n  const generateCrashPoint = () => {\n    const e = Math.random();\n    const result = Math.max(1.00, 100 / (1 - 0.93 * e) / 100);\n    return parseFloat(result.toFixed(2));\n  };\n\n  // Start the game\n  const startGame = () => {\n    const newCrashPoint = generateCrashPoint();\n    setCrashPoint(newCrashPoint);\n    setMultiplier(1.00);\n    setGameState('running');\n    setStartTime(Date.now());\n    setGraphPoints([{\n      time: 0,\n      value: 1\n    }]);\n    console.log(`Game starting. Will crash at ${newCrashPoint}x`);\n\n    // Start the game update loop\n    updateGameLoop();\n  };\n\n  // Update game state in a loop\n  const updateGameLoop = () => {\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n    }\n    timerRef.current = setTimeout(() => {\n      if (gameState !== 'running') return;\n      const elapsed = (Date.now() - startTime) / 1000;\n\n      // Growth formula\n      const newMultiplier = Math.pow(1.0316, elapsed);\n      const roundedMultiplier = parseFloat(newMultiplier.toFixed(2));\n      setMultiplier(roundedMultiplier);\n\n      // Add to graph\n      setGraphPoints(prev => [...prev, {\n        time: elapsed,\n        value: roundedMultiplier\n      }]);\n\n      // Check for auto cashout\n      if (autoCashout > 0 && roundedMultiplier >= autoCashout) {\n        cashOut();\n        return;\n      }\n\n      // Check for crash\n      if (roundedMultiplier >= crashPoint) {\n        crash();\n        return;\n      }\n\n      // Continue loop\n      updateGameLoop();\n    }, 40); // Update at 25fps for smooth movement\n  };\n\n  // Player cashes out\n  const cashOut = () => {\n    if (gameState !== 'running') return;\n    const winAmount = parseFloat((bet * multiplier).toFixed(2));\n    setWinnings(winAmount);\n    setGameState('cashed');\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n    }\n  };\n\n  // Game crashes\n  const crash = () => {\n    setGameState('crashed');\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n    }\n\n    // Add to history\n    setHistory(prev => {\n      const newHistory = [{\n        id: prev.length + 1,\n        crash: crashPoint\n      }, ...prev];\n\n      // Keep only last 10\n      if (newHistory.length > 10) {\n        return newHistory.slice(0, 10);\n      }\n      return newHistory;\n    });\n  };\n\n  // Handle between-game countdown\n  useEffect(() => {\n    if (gameState === 'waiting' && countdown > 0) {\n      const timer = setTimeout(() => {\n        setCountdown(prev => prev - 1);\n      }, 1000);\n      return () => clearTimeout(timer);\n    } else if (gameState === 'waiting' && countdown === 0) {\n      startGame();\n    }\n  }, [gameState, countdown]);\n\n  // Reset countdown after game ends\n  useEffect(() => {\n    if (gameState === 'crashed' || gameState === 'cashed') {\n      const timer = setTimeout(() => {\n        setGameState('waiting');\n        setCountdown(5);\n      }, 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [gameState]);\n\n  // Clean up timers on unmount\n  useEffect(() => {\n    return () => {\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n      }\n    };\n  }, []);\n\n  // Determine if the game is getting \"dangerous\" (for visual cues)\n  const dangerLevel = () => {\n    if (multiplier < 1.5) return 'safe';\n    if (multiplier < 3) return 'medium';\n    if (multiplier < 5) return 'risky';\n    return 'extreme';\n  };\n\n  // Get color based on danger level\n  const getDangerColor = () => {\n    switch (dangerLevel()) {\n      case 'safe':\n        return '#60A5FA';\n      // blue-400\n      case 'medium':\n        return '#FBBF24';\n      // yellow-400\n      case 'risky':\n        return '#F97316';\n      // orange-500\n      case 'extreme':\n        return '#EF4444';\n      // red-500\n      default:\n        return '#60A5FA';\n    }\n  };\n\n  // Create SVG path and area from graph points\n  const renderGraph = () => {\n    if (!graphPoints.length) return null;\n    const maxTime = Math.max(10, graphPoints[graphPoints.length - 1].time * 1.1);\n    const maxValue = Math.max(5, multiplier * 1.2);\n\n    // Create line path\n    let linePath = '';\n    // Create area path (line + bottom enclosure)\n    let areaPath = '';\n    graphPoints.forEach((point, index) => {\n      // Scale to svg coordinates\n      const x = point.time / maxTime * 100;\n      const y = 100 - point.value / maxValue * 95; // Keep 5% margin at top\n\n      if (index === 0) {\n        linePath = `M ${x} ${y}`;\n        areaPath = `M ${x} ${y}`;\n      } else {\n        linePath += ` L ${x} ${y}`;\n        areaPath += ` L ${x} ${y}`;\n      }\n\n      // If last point, close the area path\n      if (index === graphPoints.length - 1) {\n        areaPath += ` L ${x} 100 L 0 100 Z`;\n      }\n    });\n\n    // Generate horizontal grid lines\n    const gridLines = [];\n    for (let i = 1; i <= 5; i++) {\n      const value = i;\n      if (value < maxValue) {\n        const y = 100 - value / maxValue * 95;\n        gridLines.push({\n          y,\n          value\n        });\n      }\n    }\n    return /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: \"100%\",\n      height: \"100%\",\n      className: \"absolute inset-0\",\n      children: [gridLines.map((line, i) => /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"0\",\n          y1: `${line.y}%`,\n          x2: \"100%\",\n          y2: `${line.y}%`,\n          stroke: \"#374151\",\n          strokeWidth: \"1\",\n          strokeDasharray: \"5,5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: \"5\",\n          y: `${line.y - 1}%`,\n          fill: \"#9CA3AF\",\n          fontSize: \"12\",\n          children: [line.value.toFixed(1), \"x\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this)), [25, 50, 75].map((percent, i) => /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: `${percent}%`,\n        y1: \"0\",\n        x2: `${percent}%`,\n        y2: \"100%\",\n        stroke: \"#374151\",\n        strokeWidth: \"1\",\n        strokeDasharray: \"5,5\"\n      }, `v${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"path\", {\n        d: areaPath,\n        fill: getDangerColor(),\n        fillOpacity: \"0.2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n        d: linePath,\n        fill: \"none\",\n        stroke: getDangerColor(),\n        strokeWidth: \"3\",\n        strokeLinecap: \"round\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), graphPoints.length > 0 && /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: `${graphPoints[graphPoints.length - 1].time / maxTime * 100}%`,\n        cy: `${100 - graphPoints[graphPoints.length - 1].value / maxValue * 95}%`,\n        r: \"6\",\n        fill: getDangerColor(),\n        className: dangerLevel() === 'extreme' ? 'animate-pulse' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render the multiplier with animation\n  const renderMultiplier = () => {\n    // Determine text size based on multiplier value\n    const baseSize = 36;\n    const growthFactor = Math.min(1.5, 1 + (multiplier - 1) * 0.1);\n    const fontSize = baseSize * growthFactor;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `absolute top-3 right-3 text-4xl font-bold transition-all duration-100\n                  ${dangerLevel() === 'safe' ? 'text-blue-400' : ''}\n                  ${dangerLevel() === 'medium' ? 'text-yellow-400' : ''}\n                  ${dangerLevel() === 'risky' ? 'text-orange-500' : ''}\n                  ${dangerLevel() === 'extreme' ? 'text-red-500 animate-pulse' : ''}`,\n      style: {\n        fontSize: `${fontSize}px`\n      },\n      children: [multiplier.toFixed(2), \"x\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center p-6 bg-gray-900 text-white rounded-lg shadow-lg w-full max-w-2xl\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-6\",\n      children: \"Stake Out Bet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative w-full h-64 bg-gray-800 rounded-lg mb-6 overflow-hidden\",\n      children: [gameState !== 'waiting' && renderGraph(), gameState === 'running' && renderMultiplier(), gameState === 'waiting' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0 flex items-center justify-center z-20\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(Clock, {\n            className: \"mx-auto mb-2\",\n            size: 48\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-4xl font-bold\",\n            children: [countdown, \"s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2\",\n            children: \"Next round starting soon...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 11\n      }, this), gameState === 'crashed' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0 flex items-center justify-center z-20 bg-red-900 bg-opacity-75\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n            className: \"mx-auto mb-2\",\n            size: 48\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-5xl font-bold text-red-300\",\n            children: \"CRASH!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2\",\n            children: [\"Crashed at \", crashPoint.toFixed(2), \"x\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 11\n      }, this), gameState === 'cashed' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0 flex items-center justify-center z-20 bg-green-900 bg-opacity-75\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-5xl font-bold text-green-300\",\n            children: \"CASHED OUT!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2\",\n            children: [\"You won \", winnings.toFixed(2), \"!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full grid grid-cols-2 gap-4 mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm mb-1\",\n          children: \"Your Bet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"10\",\n          max: \"1000\",\n          value: bet,\n          onChange: e => setBet(Number(e.target.value)),\n          disabled: gameState === 'running',\n          className: \"w-full px-3 py-2 bg-gray-700 rounded text-white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm mb-1\",\n          children: \"Auto Cashout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0\",\n          step: \"0.1\",\n          value: autoCashout,\n          onChange: e => setAutoCashout(Number(e.target.value)),\n          disabled: gameState === 'running',\n          placeholder: \"0 = disabled\",\n          className: \"w-full px-3 py-2 bg-gray-700 rounded text-white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: gameState === 'running' ? cashOut : null,\n      disabled: gameState !== 'running',\n      className: `w-full py-4 rounded-lg font-bold text-xl mb-6\n                  ${gameState === 'running' ? 'bg-green-600 hover:bg-green-700 active:bg-green-800' : 'bg-gray-700 cursor-not-allowed'}`,\n      children: gameState === 'running' ? 'STAKE OUT! (' + (bet * multiplier).toFixed(2) + ')' : 'Waiting for next round...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-2\",\n        children: \"Previous Crashes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-2\",\n        children: history.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `px-3 py-1 rounded\n                        ${item.crash < 2 ? 'bg-red-800' : ''}\n                        ${item.crash >= 2 && item.crash < 4 ? 'bg-yellow-800' : ''}\n                        ${item.crash >= 4 ? 'bg-green-800' : ''}`,\n          children: [item.crash.toFixed(2), \"x\"]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full mt-6 text-xs text-gray-400\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Game is for demonstration purposes only. No real money is involved.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Press STAKE OUT to cash out before the multiplier crashes!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 310,\n    columnNumber: 5\n  }, this);\n};\n_s(StakeOutBet, \"bM/czeZZBR+KicsNqzNaXErJWB4=\");\n_c = StakeOutBet;\nexport default StakeOutBet;\nvar _c;\n$RefreshReg$(_c, \"StakeOutBet\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Clock","AlertTriangle","jsxDEV","_jsxDEV","StakeOutBet","_s","gameState","setGameState","multiplier","setMultiplier","bet","setBet","countdown","setCountdown","history","setHistory","id","crash","autoCashout","setAutoCashout","winnings","setWinnings","crashPoint","setCrashPoint","startTime","setStartTime","graphPoints","setGraphPoints","timerRef","svgRef","generateCrashPoint","e","Math","random","result","max","parseFloat","toFixed","startGame","newCrashPoint","Date","now","time","value","console","log","updateGameLoop","current","clearTimeout","setTimeout","elapsed","newMultiplier","pow","roundedMultiplier","prev","cashOut","winAmount","newHistory","length","slice","timer","dangerLevel","getDangerColor","renderGraph","maxTime","maxValue","linePath","areaPath","forEach","point","index","x","y","gridLines","i","push","width","height","className","children","map","line","x1","y1","x2","y2","stroke","strokeWidth","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","fill","fontSize","percent","d","fillOpacity","strokeLinecap","cx","cy","r","renderMultiplier","baseSize","growthFactor","min","style","size","type","onChange","Number","target","disabled","step","placeholder","onClick","item","_c","$RefreshReg$"],"sources":["/home/lekim/Projects/stake-out-bet/src/StakeOutBet.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Clock, AlertTriangle } from 'lucide-react';\n\nconst StakeOutBet = () => {\n  // Game states\n  const [gameState, setGameState] = useState('waiting'); // waiting, running, crashed, cashed\n  const [multiplier, setMultiplier] = useState(1.00);\n  const [bet, setBet] = useState(100);\n  const [countdown, setCountdown] = useState(5);\n  const [history, setHistory] = useState([\n    { id: 1, crash: 2.18 },\n    { id: 2, crash: 1.49 },\n    { id: 3, crash: 3.77 },\n    { id: 4, crash: 1.22 },\n    { id: 5, crash: 7.42 },\n  ]);\n  const [autoCashout, setAutoCashout] = useState(0);\n  const [winnings, setWinnings] = useState(0);\n  const [crashPoint, setCrashPoint] = useState(0);\n  const [startTime, setStartTime] = useState(null);\n  const [graphPoints, setGraphPoints] = useState([]);\n  \n  // Refs\n  const timerRef = useRef();\n  const svgRef = useRef(null);\n  \n  // Generate a random crash point\n  const generateCrashPoint = () => {\n    const e = Math.random();\n    const result = Math.max(1.00, (100 / (1 - 0.93 * e)) / 100);\n    return parseFloat(result.toFixed(2));\n  };\n  \n  // Start the game\n  const startGame = () => {\n    const newCrashPoint = generateCrashPoint();\n    setCrashPoint(newCrashPoint);\n    setMultiplier(1.00);\n    setGameState('running');\n    setStartTime(Date.now());\n    setGraphPoints([{ time: 0, value: 1 }]);\n    console.log(`Game starting. Will crash at ${newCrashPoint}x`);\n    \n    // Start the game update loop\n    updateGameLoop();\n  };\n  \n  // Update game state in a loop\n  const updateGameLoop = () => {\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n    }\n    \n    timerRef.current = setTimeout(() => {\n      if (gameState !== 'running') return;\n      \n      const elapsed = (Date.now() - startTime) / 1000;\n      \n      // Growth formula\n      const newMultiplier = Math.pow(1.0316, elapsed);\n      const roundedMultiplier = parseFloat(newMultiplier.toFixed(2));\n      \n      setMultiplier(roundedMultiplier);\n      \n      // Add to graph\n      setGraphPoints(prev => [...prev, { time: elapsed, value: roundedMultiplier }]);\n      \n      // Check for auto cashout\n      if (autoCashout > 0 && roundedMultiplier >= autoCashout) {\n        cashOut();\n        return;\n      }\n      \n      // Check for crash\n      if (roundedMultiplier >= crashPoint) {\n        crash();\n        return;\n      }\n      \n      // Continue loop\n      updateGameLoop();\n    }, 40); // Update at 25fps for smooth movement\n  };\n  \n  // Player cashes out\n  const cashOut = () => {\n    if (gameState !== 'running') return;\n    \n    const winAmount = parseFloat((bet * multiplier).toFixed(2));\n    setWinnings(winAmount);\n    setGameState('cashed');\n    \n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n    }\n  };\n  \n  // Game crashes\n  const crash = () => {\n    setGameState('crashed');\n    \n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n    }\n    \n    // Add to history\n    setHistory(prev => {\n      const newHistory = [{\n        id: prev.length + 1,\n        crash: crashPoint\n      }, ...prev];\n      \n      // Keep only last 10\n      if (newHistory.length > 10) {\n        return newHistory.slice(0, 10);\n      }\n      \n      return newHistory;\n    });\n  };\n  \n  // Handle between-game countdown\n  useEffect(() => {\n    if (gameState === 'waiting' && countdown > 0) {\n      const timer = setTimeout(() => {\n        setCountdown(prev => prev - 1);\n      }, 1000);\n      \n      return () => clearTimeout(timer);\n    } else if (gameState === 'waiting' && countdown === 0) {\n      startGame();\n    }\n  }, [gameState, countdown]);\n  \n  // Reset countdown after game ends\n  useEffect(() => {\n    if (gameState === 'crashed' || gameState === 'cashed') {\n      const timer = setTimeout(() => {\n        setGameState('waiting');\n        setCountdown(5);\n      }, 3000);\n      \n      return () => clearTimeout(timer);\n    }\n  }, [gameState]);\n  \n  // Clean up timers on unmount\n  useEffect(() => {\n    return () => {\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n      }\n    };\n  }, []);\n  \n  // Determine if the game is getting \"dangerous\" (for visual cues)\n  const dangerLevel = () => {\n    if (multiplier < 1.5) return 'safe';\n    if (multiplier < 3) return 'medium';\n    if (multiplier < 5) return 'risky';\n    return 'extreme';\n  };\n  \n  // Get color based on danger level\n  const getDangerColor = () => {\n    switch(dangerLevel()) {\n      case 'safe': return '#60A5FA'; // blue-400\n      case 'medium': return '#FBBF24'; // yellow-400\n      case 'risky': return '#F97316'; // orange-500\n      case 'extreme': return '#EF4444'; // red-500\n      default: return '#60A5FA';\n    }\n  };\n  \n  // Create SVG path and area from graph points\n  const renderGraph = () => {\n    if (!graphPoints.length) return null;\n    \n    const maxTime = Math.max(10, graphPoints[graphPoints.length - 1].time * 1.1);\n    const maxValue = Math.max(5, multiplier * 1.2);\n    \n    // Create line path\n    let linePath = '';\n    // Create area path (line + bottom enclosure)\n    let areaPath = '';\n    \n    graphPoints.forEach((point, index) => {\n      // Scale to svg coordinates\n      const x = (point.time / maxTime) * 100;\n      const y = 100 - (point.value / maxValue) * 95; // Keep 5% margin at top\n      \n      if (index === 0) {\n        linePath = `M ${x} ${y}`;\n        areaPath = `M ${x} ${y}`;\n      } else {\n        linePath += ` L ${x} ${y}`;\n        areaPath += ` L ${x} ${y}`;\n      }\n      \n      // If last point, close the area path\n      if (index === graphPoints.length - 1) {\n        areaPath += ` L ${x} 100 L 0 100 Z`;\n      }\n    });\n    \n    // Generate horizontal grid lines\n    const gridLines = [];\n    for (let i = 1; i <= 5; i++) {\n      const value = i;\n      if (value < maxValue) {\n        const y = 100 - (value / maxValue) * 95;\n        gridLines.push({\n          y,\n          value\n        });\n      }\n    }\n    \n    return (\n      <svg width=\"100%\" height=\"100%\" className=\"absolute inset-0\">\n        {/* Grid lines */}\n        {gridLines.map((line, i) => (\n          <g key={i}>\n            <line\n              x1=\"0\"\n              y1={`${line.y}%`}\n              x2=\"100%\"\n              y2={`${line.y}%`}\n              stroke=\"#374151\"\n              strokeWidth=\"1\"\n              strokeDasharray=\"5,5\"\n            />\n            <text\n              x=\"5\"\n              y={`${line.y - 1}%`}\n              fill=\"#9CA3AF\"\n              fontSize=\"12\"\n            >\n              {line.value.toFixed(1)}x\n            </text>\n          </g>\n        ))}\n        \n        {/* Vertical time markers */}\n        {[25, 50, 75].map((percent, i) => (\n          <line\n            key={`v${i}`}\n            x1={`${percent}%`}\n            y1=\"0\"\n            x2={`${percent}%`}\n            y2=\"100%\"\n            stroke=\"#374151\"\n            strokeWidth=\"1\"\n            strokeDasharray=\"5,5\"\n          />\n        ))}\n        \n        {/* Fill area under curve */}\n        <path\n          d={areaPath}\n          fill={getDangerColor()}\n          fillOpacity=\"0.2\"\n        />\n        \n        {/* Line */}\n        <path\n          d={linePath}\n          fill=\"none\"\n          stroke={getDangerColor()}\n          strokeWidth=\"3\"\n          strokeLinecap=\"round\"\n        />\n        \n        {/* Current point indicator */}\n        {graphPoints.length > 0 && (\n          <circle\n            cx={`${(graphPoints[graphPoints.length - 1].time / maxTime) * 100}%`}\n            cy={`${100 - (graphPoints[graphPoints.length - 1].value / maxValue) * 95}%`}\n            r=\"6\"\n            fill={getDangerColor()}\n            className={dangerLevel() === 'extreme' ? 'animate-pulse' : ''}\n          />\n        )}\n      </svg>\n    );\n  };\n  \n  // Render the multiplier with animation\n  const renderMultiplier = () => {\n    // Determine text size based on multiplier value\n    const baseSize = 36;\n    const growthFactor = Math.min(1.5, 1 + (multiplier - 1) * 0.1);\n    const fontSize = baseSize * growthFactor;\n    \n    return (\n      <div \n        className={`absolute top-3 right-3 text-4xl font-bold transition-all duration-100\n                  ${dangerLevel() === 'safe' ? 'text-blue-400' : ''}\n                  ${dangerLevel() === 'medium' ? 'text-yellow-400' : ''}\n                  ${dangerLevel() === 'risky' ? 'text-orange-500' : ''}\n                  ${dangerLevel() === 'extreme' ? 'text-red-500 animate-pulse' : ''}`}\n        style={{ fontSize: `${fontSize}px` }}\n      >\n        {multiplier.toFixed(2)}x\n      </div>\n    );\n  };\n  \n  return (\n    <div className=\"flex flex-col items-center p-6 bg-gray-900 text-white rounded-lg shadow-lg w-full max-w-2xl\">\n      <h1 className=\"text-3xl font-bold mb-6\">Stake Out Bet</h1>\n      \n      {/* Main Game Display */}\n      <div className=\"relative w-full h-64 bg-gray-800 rounded-lg mb-6 overflow-hidden\">\n        {/* Background grid handled within SVG */}\n        \n        {/* Game graph */}\n        {gameState !== 'waiting' && renderGraph()}\n        \n        {/* Multiplier Display */}\n        {gameState === 'running' && renderMultiplier()}\n        \n        {/* Game States */}\n        {gameState === 'waiting' && (\n          <div className=\"absolute inset-0 flex items-center justify-center z-20\">\n            <div className=\"text-center\">\n              <Clock className=\"mx-auto mb-2\" size={48} />\n              <div className=\"text-4xl font-bold\">{countdown}s</div>\n              <div className=\"mt-2\">Next round starting soon...</div>\n            </div>\n          </div>\n        )}\n        \n        {gameState === 'crashed' && (\n          <div className=\"absolute inset-0 flex items-center justify-center z-20 bg-red-900 bg-opacity-75\">\n            <div className=\"text-center\">\n              <AlertTriangle className=\"mx-auto mb-2\" size={48} />\n              <div className=\"text-5xl font-bold text-red-300\">CRASH!</div>\n              <div className=\"mt-2\">Crashed at {crashPoint.toFixed(2)}x</div>\n            </div>\n          </div>\n        )}\n        \n        {gameState === 'cashed' && (\n          <div className=\"absolute inset-0 flex items-center justify-center z-20 bg-green-900 bg-opacity-75\">\n            <div className=\"text-center\">\n              <div className=\"text-5xl font-bold text-green-300\">CASHED OUT!</div>\n              <div className=\"mt-2\">You won {winnings.toFixed(2)}!</div>\n            </div>\n          </div>\n        )}\n      </div>\n      \n      {/* Controls */}\n      <div className=\"w-full grid grid-cols-2 gap-4 mb-6\">\n        <div>\n          <label className=\"block text-sm mb-1\">Your Bet</label>\n          <input \n            type=\"number\" \n            min=\"10\"\n            max=\"1000\"\n            value={bet}\n            onChange={(e) => setBet(Number(e.target.value))}\n            disabled={gameState === 'running'}\n            className=\"w-full px-3 py-2 bg-gray-700 rounded text-white\"\n          />\n        </div>\n        \n        <div>\n          <label className=\"block text-sm mb-1\">Auto Cashout</label>\n          <input \n            type=\"number\" \n            min=\"0\"\n            step=\"0.1\"\n            value={autoCashout}\n            onChange={(e) => setAutoCashout(Number(e.target.value))}\n            disabled={gameState === 'running'}\n            placeholder=\"0 = disabled\"\n            className=\"w-full px-3 py-2 bg-gray-700 rounded text-white\"\n          />\n        </div>\n      </div>\n      \n      {/* Action Button */}\n      <button \n        onClick={gameState === 'running' ? cashOut : null}\n        disabled={gameState !== 'running'}\n        className={`w-full py-4 rounded-lg font-bold text-xl mb-6\n                  ${gameState === 'running' \n                    ? 'bg-green-600 hover:bg-green-700 active:bg-green-800' \n                    : 'bg-gray-700 cursor-not-allowed'}`}\n      >\n        {gameState === 'running' ? 'STAKE OUT! (' + (bet * multiplier).toFixed(2) + ')' : 'Waiting for next round...'}\n      </button>\n      \n      {/* History */}\n      <div className=\"w-full\">\n        <h2 className=\"text-xl font-bold mb-2\">Previous Crashes</h2>\n        <div className=\"flex flex-wrap gap-2\">\n          {history.map(item => (\n            <div \n              key={item.id} \n              className={`px-3 py-1 rounded\n                        ${item.crash < 2 ? 'bg-red-800' : ''}\n                        ${item.crash >= 2 && item.crash < 4 ? 'bg-yellow-800' : ''}\n                        ${item.crash >= 4 ? 'bg-green-800' : ''}`}\n            >\n              {item.crash.toFixed(2)}x\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Stats and Help */}\n      <div className=\"w-full mt-6 text-xs text-gray-400\">\n        <p>Game is for demonstration purposes only. No real money is involved.</p>\n        <p>Press STAKE OUT to cash out before the multiplier crashes!</p>\n      </div>\n    </div>\n  );\n};\n\nexport default StakeOutBet;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}