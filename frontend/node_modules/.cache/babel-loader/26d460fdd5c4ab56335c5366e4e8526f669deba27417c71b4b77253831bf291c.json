{"ast":null,"code":"var _jsxFileName = \"/home/lekim/Projects/stake-out-bet/frontend/src/components/ProfileComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileComponent = () => {\n  _s();\n  const [profile, setProfile] = useState({\n    user: {},\n    settings: {},\n    betSummary: {}\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [editMode, setEditMode] = useState(false);\n  const [showPasswordChange, setShowPasswordChange] = useState(false);\n  const [formData, setFormData] = useState({\n    email: '',\n    auto_cashout_multiplier: 0,\n    auto_cashout_amount: 0\n  });\n  const [passwordData, setPasswordData] = useState({\n    currentPassword: '',\n    newPassword: '',\n    confirmPassword: ''\n  });\n  const [depositAmount, setDepositAmount] = useState('');\n  const fetchProfile = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) throw new Error('Not authenticated');\n      const res = await axios.get('http://localhost:4000/api/profile', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setProfile(res.data);\n      setFormData({\n        email: res.data.user.email,\n        auto_cashout_multiplier: res.data.settings.auto_cashout_multiplier || 0,\n        auto_cashout_amount: res.data.settings.auto_cashout_amount || 0\n      });\n      setLoading(false);\n    } catch (err) {\n      setError('Failed to load profile. Please try again.');\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchProfile();\n  }, []);\n  const onChange = e => setFormData({\n    ...formData,\n    [e.target.name]: e.target.value\n  });\n  const onPasswordChange = e => setPasswordData({\n    ...passwordData,\n    [e.target.name]: e.target.value\n  });\n  const saveProfile = async () => {\n    setError('');\n    setSuccess('');\n    try {\n      const token = localStorage.getItem('token');\n      await axios.put('http://localhost:4000/api/profile', {\n        email: formData.email\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      await axios.put('http://localhost:4000/api/settings', {\n        auto_cashout_multiplier: formData.auto_cashout_multiplier,\n        auto_cashout_amount: formData.auto_cashout_amount\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setSuccess('Profile updated successfully');\n      setEditMode(false);\n      fetchProfile();\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Failed to update profile');\n    }\n  };\n  const changePassword = async e => {\n    e.preventDefault();\n    setError('');\n    setSuccess('');\n    if (passwordData.newPassword !== passwordData.confirmPassword) {\n      setError('New passwords do not match');\n      return;\n    }\n    try {\n      const token = localStorage.getItem('token');\n      await axios.put('http://localhost:4000/api/change-password', passwordData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setSuccess('Password changed successfully');\n      setPasswordData({\n        currentPassword: '',\n        newPassword: '',\n        confirmPassword: ''\n      });\n      setShowPasswordChange(false);\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || 'Failed to change password');\n    }\n  };\n  const handleDeposit = async () => {\n    setError('');\n    setSuccess('');\n    const amount = parseFloat(depositAmount);\n    if (isNaN(amount) || amount <= 0) {\n      setError('Please enter a valid deposit amount');\n      return;\n    }\n    try {\n      const token = localStorage.getItem('token');\n      const res = await axios.post('http://localhost:4000/api/deposit', {\n        amount\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setSuccess(`Deposit of ${amount.toFixed(2)} successful`);\n      setDepositAmount('');\n      setProfile(prev => ({\n        ...prev,\n        user: {\n          ...prev.user,\n          balance: res.data.user.balance\n        }\n      }));\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.error) || 'Deposit failed');\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading profile...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfileComponent, \"Q259jrUEaOxUQDpqDQInV2BXsKg=\");\n_c = ProfileComponent;\nexport default ProfileComponent;\nvar _c;\n$RefreshReg$(_c, \"ProfileComponent\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ProfileComponent","_s","profile","setProfile","user","settings","betSummary","loading","setLoading","error","setError","success","setSuccess","editMode","setEditMode","showPasswordChange","setShowPasswordChange","formData","setFormData","email","auto_cashout_multiplier","auto_cashout_amount","passwordData","setPasswordData","currentPassword","newPassword","confirmPassword","depositAmount","setDepositAmount","fetchProfile","token","localStorage","getItem","Error","res","get","headers","Authorization","data","err","onChange","e","target","name","value","onPasswordChange","saveProfile","put","_err$response","_err$response$data","response","changePassword","preventDefault","_err$response2","_err$response2$data","handleDeposit","amount","parseFloat","isNaN","post","toFixed","prev","balance","_err$response3","_err$response3$data","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/home/lekim/Projects/stake-out-bet/frontend/src/components/ProfileComponent.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ProfileComponent = () => {\r\n  const [profile, setProfile] = useState({ user: {}, settings: {}, betSummary: {} });\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [showPasswordChange, setShowPasswordChange] = useState(false);\r\n\r\n  const [formData, setFormData] = useState({ email: '', auto_cashout_multiplier: 0, auto_cashout_amount: 0 });\r\n  const [passwordData, setPasswordData] = useState({ currentPassword: '', newPassword: '', confirmPassword: '' });\r\n  const [depositAmount, setDepositAmount] = useState('');\r\n\r\n  const fetchProfile = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) throw new Error('Not authenticated');\r\n\r\n      const res = await axios.get('http://localhost:4000/api/profile', {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n\r\n      setProfile(res.data);\r\n      setFormData({\r\n        email: res.data.user.email,\r\n        auto_cashout_multiplier: res.data.settings.auto_cashout_multiplier || 0,\r\n        auto_cashout_amount: res.data.settings.auto_cashout_amount || 0\r\n      });\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError('Failed to load profile. Please try again.');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProfile();\r\n  }, []);\r\n\r\n  const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onPasswordChange = e => setPasswordData({ ...passwordData, [e.target.name]: e.target.value });\r\n\r\n  const saveProfile = async () => {\r\n    setError('');\r\n    setSuccess('');\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      await axios.put('http://localhost:4000/api/profile', { email: formData.email }, { headers: { Authorization: `Bearer ${token}` } });\r\n      await axios.put('http://localhost:4000/api/settings', {\r\n        auto_cashout_multiplier: formData.auto_cashout_multiplier,\r\n        auto_cashout_amount: formData.auto_cashout_amount\r\n      }, { headers: { Authorization: `Bearer ${token}` } });\r\n\r\n      setSuccess('Profile updated successfully');\r\n      setEditMode(false);\r\n      fetchProfile();\r\n    } catch (err) {\r\n      setError(err.response?.data?.error || 'Failed to update profile');\r\n    }\r\n  };\r\n\r\n  const changePassword = async e => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSuccess('');\r\n    if (passwordData.newPassword !== passwordData.confirmPassword) {\r\n      setError('New passwords do not match');\r\n      return;\r\n    }\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      await axios.put('http://localhost:4000/api/change-password', passwordData, { headers: { Authorization: `Bearer ${token}` } });\r\n      setSuccess('Password changed successfully');\r\n      setPasswordData({ currentPassword: '', newPassword: '', confirmPassword: '' });\r\n      setShowPasswordChange(false);\r\n    } catch (err) {\r\n      setError(err.response?.data?.error || 'Failed to change password');\r\n    }\r\n  };\r\n\r\n  const handleDeposit = async () => {\r\n    setError('');\r\n    setSuccess('');\r\n    const amount = parseFloat(depositAmount);\r\n    if (isNaN(amount) || amount <= 0) {\r\n      setError('Please enter a valid deposit amount');\r\n      return;\r\n    }\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const res = await axios.post('http://localhost:4000/api/deposit', { amount }, { headers: { Authorization: `Bearer ${token}` } });\r\n      setSuccess(`Deposit of ${amount.toFixed(2)} successful`);\r\n      setDepositAmount('');\r\n      setProfile(prev => ({ ...prev, user: { ...prev.user, balance: res.data.user.balance } }));\r\n    } catch (err) {\r\n      setError(err.response?.data?.error || 'Deposit failed');\r\n    }\r\n  };\r\n\r\n  if (loading) return <div>Loading profile...</div>;\r\n\r\n  return (\r\n    <div className=\"profile-container\">\r\n      {/* Your existing JSX code here unchanged */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC;IAAES,IAAI,EAAE,CAAC,CAAC;IAAEC,QAAQ,EAAE,CAAC,CAAC;IAAEC,UAAU,EAAE,CAAC;EAAE,CAAC,CAAC;EAClF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACoB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAEnE,MAAM,CAACsB,QAAQ,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CAAC;IAAEwB,KAAK,EAAE,EAAE;IAAEC,uBAAuB,EAAE,CAAC;IAAEC,mBAAmB,EAAE;EAAE,CAAC,CAAC;EAC3G,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAG5B,QAAQ,CAAC;IAAE6B,eAAe,EAAE,EAAE;IAAEC,WAAW,EAAE,EAAE;IAAEC,eAAe,EAAE;EAAG,CAAC,CAAC;EAC/G,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMkC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACF,KAAK,EAAE,MAAM,IAAIG,KAAK,CAAC,mBAAmB,CAAC;MAEhD,MAAMC,GAAG,GAAG,MAAMrC,KAAK,CAACsC,GAAG,CAAC,mCAAmC,EAAE;QAC/DC,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUP,KAAK;QAAG;MAC9C,CAAC,CAAC;MAEF3B,UAAU,CAAC+B,GAAG,CAACI,IAAI,CAAC;MACpBpB,WAAW,CAAC;QACVC,KAAK,EAAEe,GAAG,CAACI,IAAI,CAAClC,IAAI,CAACe,KAAK;QAC1BC,uBAAuB,EAAEc,GAAG,CAACI,IAAI,CAACjC,QAAQ,CAACe,uBAAuB,IAAI,CAAC;QACvEC,mBAAmB,EAAEa,GAAG,CAACI,IAAI,CAACjC,QAAQ,CAACgB,mBAAmB,IAAI;MAChE,CAAC,CAAC;MACFb,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAO+B,GAAG,EAAE;MACZ7B,QAAQ,CAAC,2CAA2C,CAAC;MACrDF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACdiC,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMW,QAAQ,GAAGC,CAAC,IAAIvB,WAAW,CAAC;IAAE,GAAGD,QAAQ;IAAE,CAACwB,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;EAAM,CAAC,CAAC;EAEnF,MAAMC,gBAAgB,GAAGJ,CAAC,IAAIlB,eAAe,CAAC;IAAE,GAAGD,YAAY;IAAE,CAACmB,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;EAAM,CAAC,CAAC;EAEnG,MAAME,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9BpC,QAAQ,CAAC,EAAE,CAAC;IACZE,UAAU,CAAC,EAAE,CAAC;IACd,IAAI;MACF,MAAMkB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMnC,KAAK,CAACkD,GAAG,CAAC,mCAAmC,EAAE;QAAE5B,KAAK,EAAEF,QAAQ,CAACE;MAAM,CAAC,EAAE;QAAEiB,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUP,KAAK;QAAG;MAAE,CAAC,CAAC;MAClI,MAAMjC,KAAK,CAACkD,GAAG,CAAC,oCAAoC,EAAE;QACpD3B,uBAAuB,EAAEH,QAAQ,CAACG,uBAAuB;QACzDC,mBAAmB,EAAEJ,QAAQ,CAACI;MAChC,CAAC,EAAE;QAAEe,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUP,KAAK;QAAG;MAAE,CAAC,CAAC;MAErDlB,UAAU,CAAC,8BAA8B,CAAC;MAC1CE,WAAW,CAAC,KAAK,CAAC;MAClBe,YAAY,CAAC,CAAC;IAChB,CAAC,CAAC,OAAOU,GAAG,EAAE;MAAA,IAAAS,aAAA,EAAAC,kBAAA;MACZvC,QAAQ,CAAC,EAAAsC,aAAA,GAAAT,GAAG,CAACW,QAAQ,cAAAF,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcV,IAAI,cAAAW,kBAAA,uBAAlBA,kBAAA,CAAoBxC,KAAK,KAAI,0BAA0B,CAAC;IACnE;EACF,CAAC;EAED,MAAM0C,cAAc,GAAG,MAAMV,CAAC,IAAI;IAChCA,CAAC,CAACW,cAAc,CAAC,CAAC;IAClB1C,QAAQ,CAAC,EAAE,CAAC;IACZE,UAAU,CAAC,EAAE,CAAC;IACd,IAAIU,YAAY,CAACG,WAAW,KAAKH,YAAY,CAACI,eAAe,EAAE;MAC7DhB,QAAQ,CAAC,4BAA4B,CAAC;MACtC;IACF;IACA,IAAI;MACF,MAAMoB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMnC,KAAK,CAACkD,GAAG,CAAC,2CAA2C,EAAEzB,YAAY,EAAE;QAAEc,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUP,KAAK;QAAG;MAAE,CAAC,CAAC;MAC7HlB,UAAU,CAAC,+BAA+B,CAAC;MAC3CW,eAAe,CAAC;QAAEC,eAAe,EAAE,EAAE;QAAEC,WAAW,EAAE,EAAE;QAAEC,eAAe,EAAE;MAAG,CAAC,CAAC;MAC9EV,qBAAqB,CAAC,KAAK,CAAC;IAC9B,CAAC,CAAC,OAAOuB,GAAG,EAAE;MAAA,IAAAc,cAAA,EAAAC,mBAAA;MACZ5C,QAAQ,CAAC,EAAA2C,cAAA,GAAAd,GAAG,CAACW,QAAQ,cAAAG,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcf,IAAI,cAAAgB,mBAAA,uBAAlBA,mBAAA,CAAoB7C,KAAK,KAAI,2BAA2B,CAAC;IACpE;EACF,CAAC;EAED,MAAM8C,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC7C,QAAQ,CAAC,EAAE,CAAC;IACZE,UAAU,CAAC,EAAE,CAAC;IACd,MAAM4C,MAAM,GAAGC,UAAU,CAAC9B,aAAa,CAAC;IACxC,IAAI+B,KAAK,CAACF,MAAM,CAAC,IAAIA,MAAM,IAAI,CAAC,EAAE;MAChC9C,QAAQ,CAAC,qCAAqC,CAAC;MAC/C;IACF;IACA,IAAI;MACF,MAAMoB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAME,GAAG,GAAG,MAAMrC,KAAK,CAAC8D,IAAI,CAAC,mCAAmC,EAAE;QAAEH;MAAO,CAAC,EAAE;QAAEpB,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUP,KAAK;QAAG;MAAE,CAAC,CAAC;MAChIlB,UAAU,CAAC,cAAc4C,MAAM,CAACI,OAAO,CAAC,CAAC,CAAC,aAAa,CAAC;MACxDhC,gBAAgB,CAAC,EAAE,CAAC;MACpBzB,UAAU,CAAC0D,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAEzD,IAAI,EAAE;UAAE,GAAGyD,IAAI,CAACzD,IAAI;UAAE0D,OAAO,EAAE5B,GAAG,CAACI,IAAI,CAAClC,IAAI,CAAC0D;QAAQ;MAAE,CAAC,CAAC,CAAC;IAC3F,CAAC,CAAC,OAAOvB,GAAG,EAAE;MAAA,IAAAwB,cAAA,EAAAC,mBAAA;MACZtD,QAAQ,CAAC,EAAAqD,cAAA,GAAAxB,GAAG,CAACW,QAAQ,cAAAa,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAczB,IAAI,cAAA0B,mBAAA,uBAAlBA,mBAAA,CAAoBvD,KAAK,KAAI,gBAAgB,CAAC;IACzD;EACF,CAAC;EAED,IAAIF,OAAO,EAAE,oBAAOR,OAAA;IAAAkE,QAAA,EAAK;EAAkB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEjD,oBACEtE,OAAA;IAAKuE,SAAS,EAAC;EAAmB;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE7B,CAAC;AAEV,CAAC;AAACpE,EAAA,CA1GID,gBAAgB;AAAAuE,EAAA,GAAhBvE,gBAAgB;AA4GtB,eAAeA,gBAAgB;AAAC,IAAAuE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}